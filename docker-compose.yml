# Note: This docker-compose.yml is for local development

services:
  mysql:
    image: mysql:8.4.4
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - ecs-vaani-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build: .
    ports:
      - "80:80"
    volumes:
      - .:/app
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 80
    environment:
      # MySQL connection settings
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DB_NAME=${MYSQL_DB_NAME}
      # API keys and auth
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - PORTKEY_API_KEY=${PORTKEY_API_KEY}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_API_AUDIENCE=${AUTH0_API_AUDIENCE}
      - AUTH0_ALGORITHMS=${AUTH0_ALGORITHMS}
      # Application settings
      - ENV=${ENV}
      # Redis connection
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    networks:
      - ecs-vaani-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - ecs-vaani-network

  rq-worker:
    build: .
    command: ["/bin/bash", "worker-init.sh"]
    volumes:
      - .:/app
    environment:
      # MySQL connection settings
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DB_NAME=${MYSQL_DB_NAME}
      # API keys and auth
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - PORTKEY_API_KEY=${PORTKEY_API_KEY}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_API_AUDIENCE=${AUTH0_API_AUDIENCE}
      - AUTH0_ALGORITHMS=${AUTH0_ALGORITHMS}
      # Application settings
      - ENV=${ENV}
      # Redis connection
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ecs-vaani-network

volumes:
  redis-data:
  mysql-data:

networks:
  ecs-vaani-network:
    driver: bridge
